version: "3.8"

services:
  consul-server:
    container_name: consul-server
    image: consul:latest
    ports:
      - "8500:8500"
    command: 'agent -server -bootstrap-expect=1 -ui -bind=0.0.0.0 -client=0.0.0.0'
    networks:
      - microservices-network
  readservice:
    container_name: readservice
    image: readservice:latest
    build:
      dockerfile: Dockerfile
      context: ./read
    environment:
      SERVICE_NAME: read-service
      SERVER_PORT: 3001
      CONSUL_HOST: consul-server
      CONSUL_PORT: 8500
    ports:
      - "3001:3001"
    links:
      - consul-server
    networks:
      - microservices-network
  writeservice:
    container_name: writeservice
    image: writeservice:latest
    environment:
      SERVICE_NAME: write-service
      SERVER_PORT: 3002
      CONSUL_HOST: consul-server
      CONSUL_PORT: 8500
    build:
      dockerfile: Dockerfile
      context: ./write
    ports:
      - "3002:3002"
    links:
      - consul-server
    networks:
      - microservices-network

  gatewayservice:
    container_name: gatewayservice
    image: gatewayservice:latest
    environment:
      SERVICE_NAME: gateway-service
      SERVER_PORT: 8080
      CONSUL_HOST: consul-server
      CONSUL_PORT: 8500
    build:
      dockerfile: Dockerfile
      context: ./gateway
    ports:
      - "8080:8080"
    links:
      - consul-server
    networks:
      - microservices-network

  postgresql:
    image: postgres:14.5
    container_name: postgresql

    volumes:
      - ./data/db:/var/lib/postgresql/data

    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: demo_kc
    ports:
      - "5433:5432"
    networks:
      - microservices-network

  keycloak:
    image: jboss/keycloak
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: postgresql
      DB_DATABASE: demo_kc
      DB_USER: admin
      DB_SCHEMA: public
      DB_PASSWORD: admin
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
      # Uncomment the line below if you want to specify JDBC parameters. The parameter below is just an example, and it shouldn't be used in production without knowledge. It is highly recommended that you read the PostgreSQL JDBC driver documentation in order to use it.
      #JDBC_PARAMS: "ssl=true"
    ports:
      - 8180:8080
    depends_on:
      - postgresql
    networks:
      - microservices-network

  pgadmin:
    image: dpage/pgadmin4:6.11
    container_name: pgadmin4

    volumes:
      - ./data/pgamin-data:/var/lib/pgadmin

    environment:
      PGADMIN_DEFAULT_EMAIL: root@root.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - "5050:80"
    networks:
      - microservices-network

networks:
  microservices-network:
    driver: bridge