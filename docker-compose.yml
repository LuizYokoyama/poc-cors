version: "3.8"

services:
  readservice:
    container_name: readservice
    image: readservice:latest
    build:
      dockerfile: Dockerfile
      context: ./read
    environment:
      SERVICE_NAME: read-service
      SERVER_PORT: 3001
    ports:
      - "3001:3001"
    networks:
      - microservices-network
  writeservice:
    container_name: writeservice
    image: writeservice:latest
    environment:
      SERVICE_NAME: write-service
      SERVER_PORT: 3002
    build:
      dockerfile: Dockerfile
      context: ./write
    ports:
      - "3002:3002"
    networks:
      - microservices-network

  gatewayservice:
    container_name: gatewayservice
    image: gatewayservice:latest
    environment:
      SERVICE_NAME: gateway-service
      SERVER_PORT: 8080
    build:
      dockerfile: Dockerfile
      context: ./gateway
    ports:
      - "8080:8080"
    networks:
      - microservices-network

  postgresql:
    image: postgres:14.5
    container_name: postgresql
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: demo_kc
    ports:
      - "5433:5432"
    networks:
      - microservices-network

  keycloak:
    image: jboss/keycloak
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: postgresql
      DB_DATABASE: demo_kc
      DB_USER: admin
      DB_SCHEMA: public
      DB_PASSWORD: admin
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
      #JDBC_PARAMS: "ssl=true"
    ports:
      - 8180:8080
    depends_on:
      - postgresql
    networks:
      - microservices-network


networks:
  microservices-network:
    driver: bridge